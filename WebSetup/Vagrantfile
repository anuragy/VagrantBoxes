# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  config.vm.box = "ubuntu/trusty64"
  config.vm.box_check_update = false
  
  # config.vm.provider "virtualbox" do |vb|
  #   vb.gui = true
  #   vb.memory = "1024"
  # end

  # config.vm.define "lb" do |lb_config|
  #   lb_config.vm.network :private_network, ip: "192.168.56.102"
  #   lb_config.vm.hostname = "lb"
  #   lb_config.vm.network "forwarded_port", guest: 80, host: 8080
  #   lb_config.vm.provider "virtualbox" do |vb|
  #     vb.memory = "256"
  #   end    
  # end

  (1..2).each do |i|
    config.vm.define "web#{i}" do |node|
        node.vm.box = "UbuntuTrusty64Web"
        node.vm.hostname = "web#{i}"
        node.vm.network :private_network, ip: "192.168.56.20#{i}"
        node.vm.network "forwarded_port", guest: 80, host: "808#{i}"
        node.vm.provider "virtualbox" do |vb|
          vb.memory = "512"
        end
    end
  end  

  config.vm.define "admin" do |admin_config|
    admin_config.vm.box = "UbuntuTrusty64Web"
    admin_config.vm.network :private_network, ip: "192.168.56.101"
    admin_config.vm.hostname = "admin"
    admin_config.vm.provider "virtualbox" do |vb|
      vb.memory = "512"
      vb.gui = true
    end
    admin_config.vm.provision :shell, path: "bootstrap_admin.sh"
  end


  # config.vm.network "forwarded_port", guest: 80, host: 8080
  # config.vm.network "private_network", ip: "192.168.33.10"
  # config.vm.network "public_network"
  # config.vm.synced_folder "../data", "/vagrant_data"

  # config.vm.provision :ansible do |ansible|
  #   ansible.playbook = "./playbooks/provision.yml"
  #   ansible.inventory_path = "hosts"
  #   ansible.verbose = true
  #   ansible.host_key_checking = false
  #   ansible.extra_vars = { ansible_ssh_user: 'vagrant' }
  #   ansible.sudo = true
  # end
  
  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end



